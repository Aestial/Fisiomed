<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Assembly-CSharp</name>
    </assembly>
    <members>
        <member name="M:UnityEngine.UI.ProceduralImage.MaterialHelper.SetMaterialValues(UnityEngine.UI.ProceduralImage.ProceduralImageMaterialInfo,UnityEngine.Material)">
            <summary>
            Sets the material values.
            </summary>
            <returns>The material values.</returns>
            <param name="info">Values to set.</param>
            <param name="baseMaterial">Base material.</param>
        </member>
        <member name="T:UnityEngine.UI.ProceduralImage.ProceduralImageMaterialInfo">
            <summary>
            Material info. Contains values of "UI/Procedural UI Image" shader
            </summary>
        </member>
        <member name="P:UnityEngine.UI.ProceduralImage.ProceduralImage.ModifierType">
            <summary>
            Gets or sets the type of the modifier. Adds a modifier of that type.
            </summary>
            <value>The type of the modifier.</value>
        </member>
        <member name="M:UnityEngine.UI.ProceduralImage.ProceduralImage.Init">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:UnityEngine.UI.ProceduralImage.ProceduralImage.FixRadius(UnityEngine.Vector4)">
            <summary>
            Prevents radius to get bigger than rect size
            </summary>
            <returns>The fixed radius.</returns>
            <param name="vec">border-radius as Vector4 (starting upper-left, clockwise)</param>
        </member>
        <member name="M:UnityEngine.UI.ProceduralImage.ProceduralImage.EncodeFloats_0_1_16_16(System.Single,System.Single)">
            <summary>
            Encode two values between [0,1] into a single float. Each using 16 bits.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:UnityEngine.UI.ProceduralImage.ProceduralImage.OnValidate">
            <summary>
            Called when the script is loaded or a value is changed in the
            inspector (Called in the editor only).
            </summary>
        </member>
        <member name="T:UnityEngine.UI.ProceduralImage.ProceduralImageInfo">
            <summary>
            Contains all parameters of a proceduaral image
            </summary>
        </member>
        <member name="M:UnityEngine.UI.ProceduralImage.ProceduralImageModifier.CalculateRadius(UnityEngine.Rect)">
            <summary>
            Calculates the border-radius for Procedural Image.
            </summary>
            <returns>The radius as Vector4. (started top-left, clockwise)</returns>
            <param name="imageRect">Rect of ProceduralImages RectTransform</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.Examples.Example01ScrollViewCell.UpdateContent(UnityEngine.UI.Extensions.Examples.Example01CellDto)">
            <summary>
            セルの内容を更新します
            </summary>
            <param name="itemData"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.Examples.Example01ScrollViewCell.UpdatePosition(System.Single)">
            <summary>
            セルの位置を更新します
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.Examples.Example02ScrollViewCell.SetContext(UnityEngine.UI.Extensions.Examples.Example02ScrollViewContext)">
            <summary>
            コンテキストを設定します
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.Examples.Example02ScrollViewCell.UpdateContent(UnityEngine.UI.Extensions.Examples.Example02CellDto)">
            <summary>
            セルの内容を更新します
            </summary>
            <param name="itemData"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.Examples.Example02ScrollViewCell.UpdatePosition(System.Single)">
            <summary>
            セルの位置を更新します
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.Examples.Example03ScrollViewCell.SetContext(UnityEngine.UI.Extensions.Examples.Example03ScrollViewContext)">
            <summary>
            コンテキストを設定します
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.Examples.Example03ScrollViewCell.UpdateContent(UnityEngine.UI.Extensions.Examples.Example03CellDto)">
            <summary>
            セルの内容を更新します
            </summary>
            <param name="itemData"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.Examples.Example03ScrollViewCell.UpdatePosition(System.Single)">
            <summary>
            セルの位置を更新します
            </summary>
            <param name="position"></param>
        </member>
        <member name="P:UnityEngine.UI.Extensions.Accordion.transition">
            <summary>
            Gets or sets the transition.
            </summary>
            <value>The transition.</value>
        </member>
        <member name="P:UnityEngine.UI.Extensions.Accordion.transitionDuration">
            <summary>
            Gets or sets the duration of the transition.
            </summary>
            <value>The duration of the transition.</value>
        </member>
        <member name="P:UnityEngine.UI.Extensions.Tweens.FloatTween.startFloat">
            <summary>
            Gets or sets the starting float.
            </summary>
            <value>The start float.</value>
        </member>
        <member name="P:UnityEngine.UI.Extensions.Tweens.FloatTween.targetFloat">
            <summary>
            Gets or sets the target float.
            </summary>
            <value>The target float.</value>
        </member>
        <member name="P:UnityEngine.UI.Extensions.Tweens.FloatTween.duration">
            <summary>
            Gets or sets the duration of the tween.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:UnityEngine.UI.Extensions.Tweens.FloatTween.ignoreTimeScale">
            <summary>
            Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.Tweens.ColorTween"/> should ignore time scale.
            </summary>
            <value><c>true</c> if ignore time scale; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:UnityEngine.UI.Extensions.Tweens.FloatTween.TweenValue(System.Single)">
            <summary>
            Tweens the float based on percentage.
            </summary>
            <param name="floatPercentage">Float percentage.</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.Tweens.FloatTween.AddOnChangedCallback(UnityEngine.Events.UnityAction{System.Single})">
            <summary>
            Adds a on changed callback.
            </summary>
            <param name="callback">Callback.</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.Tweens.FloatTween.AddOnFinishCallback(UnityEngine.Events.UnityAction)">
            <summary>
            Adds a on finish callback.
            </summary>
            <param name="callback">Callback.</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.Tweens.FloatTween.Finished">
            <summary>
            Invokes the on finish callback.
            </summary>
        </member>
        <member name="T:UnityEngine.UI.Extensions.ColorPicker.ColorSlider">
            <summary>
            Displays one of the color values of aColorPicker
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.ColorPicker.ColorSlider.type">
            <summary>
            Which value this slider can edit.
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.ColorPicker.ColorSliderImage.type">
            <summary>
            Which value this slider can edit.
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.ColorPicker.HsvColor.H">
            <summary>
            The Hue, ranges between 0 and 360
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.ColorPicker.HsvColor.S">
            <summary>
            The saturation, ranges between 0 and 1
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.AutoCompleteComboBox.RebuildPanel">
            <summary>
            Rebuilds the contents of the panel in response to items being added.
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.AutoCompleteComboBox.OnItemClicked(System.String)">
            <summary>
            what happens when an item in the list is selected
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.AutoCompleteComboBox.ToggleDropdownPanel(System.Boolean)">
            <summary>
            Toggle the drop down list
            </summary>
            <param name="directClick"> whether an item was directly clicked on</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ComboBox.RebuildPanel">
            <summary>
            Rebuilds the contents of the panel in response to items being added.
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ComboBox.OnItemClicked(System.String)">
            <summary>
            what happens when an item in the list is selected
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ComboBox.ToggleDropdownPanel(System.Boolean)">
            <summary>
            Toggle the drop down list
            </summary>
            <param name="directClick"> whether an item was directly clicked on</param>
        </member>
        <member name="T:UnityEngine.UI.Extensions.DropDownList">
            <summary>
             Extension to the UI class which creates a dropdown list 
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.DropDownList.RebuildPanel">
            <summary>
            Rebuilds the contents of the panel in response to items being added.
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.DropDownList.ToggleDropdownPanel(System.Boolean)">
            <summary>
            Toggle the drop down list
            </summary>
            <param name="directClick"> whether an item was directly clicked on</param>
        </member>
        <member name="P:UnityEngine.UI.Extensions.DropDownListItem.Caption">
            <summary>
            Caption of the Item
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.DropDownListItem.Image">
            <summary>
            Image component of the Item
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.DropDownListItem.IsDisabled">
            <summary>
            Is the Item currently enabled?
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.DropDownListItem.ID">
            <summary>
            ID exists so that an item can have a caption and a value like in traditional windows forms. Ie. an item may be a student's name, and the ID can be the student's ID number
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.DropDownListItem.#ctor(System.String,System.String,UnityEngine.Sprite,System.Boolean,System.Action)">
            <summary>
            Constructor for Drop Down List panelItems
            </summary>
            <param name="caption">Caption for the item </param>
            <param name="val">ID of the item </param>
            <param name="image"></param>
            <param name="disabled">Should the item start disabled</param>
            <param name="onSelect">Action to be called when this item is selected</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.CooldownButton.PauseCooldown">
            <summary>
            Pause Cooldown without resetting values, allows Restarting of cooldown
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.CooldownButton.RestartCooldown">
            <summary>
            Restart a paused cooldown
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.CooldownButton.StopCooldown">
            <summary>
            Stop a running Cooldown and reset all values
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.CooldownButton.CancelCooldown">
            <summary>
            Stop a running Cooldown and retain current values
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.MultiTouchScrollRect.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Begin drag event
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.MultiTouchScrollRect.OnDrag(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Drag event
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.MultiTouchScrollRect.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            End drag event
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.TextPic.m_ImagesPool">
            <summary>
            Image Pool
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.TextPic.m_ImagesVertexIndex">
            <summary>
            Vertex Index
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.TextPic.s_Regex">
            <summary>
            Regular expression to replace 
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.TextPic.m_OutputText">
            <summary>
            After parsing the final text
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.TextPic.previousText">
            Little heck to support multiple hrefs with same name
        </member>
        <member name="F:UnityEngine.UI.Extensions.TextPic.m_HrefInfos">
            <summary>
            Hyperlink List
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.TextPic.s_TextBuilder">
            <summary>
            Text Builder
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.TextPic.s_HrefRegex">
            <summary>
            Hyperlink Regular Expression
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.TextPic.onHrefClick">
            <summary>
            Hyperlink Click Event
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.TextPic.GetOutputText">
            <summary>
            Finally, the output text hyperlinks get parsed
            </summary>
            <returns></returns>
        </member>
        <member name="M:UnityEngine.UI.Extensions.TextPic.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Click event is detected whether to click a hyperlink text
            </summary>
            <param name="eventData"></param>
        </member>
        <member name="T:UnityEngine.UI.Extensions.TextPic.HrefInfo">
            <summary>
            Hyperlinks Info
            </summary>
        </member>
        <member name="T:UnityEngine.UI.Extensions.CUIBezierCurve">
            <summary>
            Assume to be a cubic bezier curve at the moment.
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.CUIBezierCurve.EDITOR_ControlPoints">
            <summary>
            Reserve for editor only
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.CUIBezierCurve.GetPoint(System.Single)">
            <summary>
            call this to get a sample
            </summary>
            <param name="_time"></param>
            <returns>sample returned by said time</returns>
        </member>
        <member name="F:UnityEngine.UI.Extensions.CUIGraphic.isCurved">
            <summary>
            Describing the properties of this object.
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.CUIGraphic.rectTrans">
            <summary>
            Refernce to other objects that are needed by this object.
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.CUIGraphic.uiVertexBerp(UnityEngine.UIVertex,UnityEngine.UIVertex,UnityEngine.UIVertex,UnityEngine.UIVertex,System.Single,System.Single)">
            <summary>
            Bilinear Interpolation
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.CUIGraphic.ReportSet">
            <summary>
            Check, prepare and set everything needed. 
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.CUIImage.ImageTypeCornerRefVertexIdx(UnityEngine.UI.Image.Type)">
            <summary>
            For sliced and filled image only.
            </summary>
            <param name="_type"></param>
            <returns></returns>
        </member>
        <member name="M:UnityEngine.UI.Extensions.UIImageCrop.SetXCrop(System.Single)">
            <summary>
            Set the x crop factor, with x being a normalized value 0-1f.  
            </summary>
            <param name="xcrop"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.UIImageCrop.SetYCrop(System.Single)">
            <summary>
            Set the y crop factor, with y being a normalized value 0-1f.  
            </summary>
            <param name="ycrop"></param>
        </member>
        <member name="P:UnityEngine.UI.Extensions.UIFlippable.horizontal">
            <summary>
            Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UIFlippable"/> should be flipped horizontally.
            </summary>
            <value><c>true</c> if horizontal; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:UnityEngine.UI.Extensions.UIFlippable.vertical">
            <summary>
            Gets or sets a value indicating whether this <see cref="!:UnityEngine.UI.UIFlippable"/> should be flipped vertically.
            </summary>
            <value><c>true</c> if vertical; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:UnityEngine.UI.Extensions.CurvedLayout">
            <summary>
            TODO:
            - add automatic child sizing, like in the HorizontalOrVerticalLayoutGroup.cs
            - nicer anchor handling for initial child positions
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.FancyScrollView`2.SetContext(`1)">
            <summary>
            コンテキストを設定します
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.FancyScrollView`2.CreateCell">
            <summary>
            セルを生成して返します
            </summary>
            <returns></returns>
        </member>
        <member name="M:UnityEngine.UI.Extensions.FancyScrollView`2.UpdateCellForIndex(UnityEngine.UI.Extensions.FancyScrollViewCell{`0,`1},System.Int32)">
            <summary>
            セルの内容を更新します
            </summary>
            <param name="cell"></param>
            <param name="dataIndex"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.FancyScrollView`2.GetLoopIndex(System.Int32,System.Int32)">
            <summary>
            円環構造の index を取得します
            </summary>
            <param name="index"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:UnityEngine.UI.Extensions.FancyScrollView`2.UpdateContents">
            <summary>
            表示内容を更新します
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.FancyScrollView`2.UpdatePosition(System.Single)">
            <summary>
            スクロール位置を更新します
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.FancyScrollViewCell`2.SetContext(`1)">
            <summary>
            コンテキストを設定します
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.FancyScrollViewCell`2.UpdateContent(`0)">
            <summary>
            セルの内容を更新します
            </summary>
            <param name="itemData"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.FancyScrollViewCell`2.UpdatePosition(System.Single)">
            <summary>
            セルの位置を更新します
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.FancyScrollViewCell`2.SetVisible(System.Boolean)">
            <summary>
            セルの表示/非表示を設定します
            </summary>
            <param name="visible"></param>
        </member>
        <member name="P:UnityEngine.UI.Extensions.FancyScrollViewCell`2.DataIndex">
            <summary>
            このセルで表示しているデータのインデックス
            </summary>
        </member>
        <member name="T:UnityEngine.UI.Extensions.FlowLayoutGroup">
            <summary>
            Layout Group controller that arranges children in rows, fitting as many on a line until total width exceeds parent bounds
            </summary>
        </member>
        <member name="F:UnityEngine.UI.Extensions.FlowLayoutGroup._rowList">
            <summary>
            Holds the rects that will make up the current row being processed
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.FlowLayoutGroup.SetLayout(System.Single,System.Int32,System.Boolean)">
            <summary>
            Main layout method
            </summary>
            <param name="width">Width to calculate the layout with</param>
            <param name="axis">0 for horizontal axis, 1 for vertical</param>
            <param name="layoutInput">If true, sets the layout input for the axis. If false, sets child position for axis</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.HorizontalScrollSnap.AddChild(UnityEngine.GameObject)">
            <summary>
            Add a new child to this Scroll Snap and recalculate it's children
            </summary>
            <param name="GO">GameObject to add to the ScrollSnap</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.HorizontalScrollSnap.AddChild(UnityEngine.GameObject,System.Boolean)">
            <summary>
            Add a new child to this Scroll Snap and recalculate it's children
            </summary>
            <param name="GO">GameObject to add to the ScrollSnap</param>
            <param name="WorldPositionStays">Should the world position be updated to it's parent transform?</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.HorizontalScrollSnap.RemoveChild(System.Int32,UnityEngine.GameObject@)">
            <summary>
            Remove a new child to this Scroll Snap and recalculate it's children 
            *Note, this is an index address (0-x)
            </summary>
            <param name="index">Index element of child to remove</param>
            <param name="ChildRemoved">Resulting removed GO</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.HorizontalScrollSnap.RemoveChild(System.Int32,System.Boolean,UnityEngine.GameObject@)">
            <summary>
            Remove a new child to this Scroll Snap and recalculate it's children 
            *Note, this is an index address (0-x)
            </summary>
            <param name="index">Index element of child to remove</param>
            <param name="WorldPositionStays">If true, the parent-relative position, scale and rotation are modified such that the object keeps the same world space position, rotation and scale as before</param>
            <param name="ChildRemoved">Resulting removed GO</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.HorizontalScrollSnap.RemoveAllChildren(UnityEngine.GameObject[]@)">
            <summary>
            Remove all children from this ScrollSnap
            </summary>
            <param name="ChildrenRemoved">Array of child GO's removed</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.HorizontalScrollSnap.RemoveAllChildren(System.Boolean,UnityEngine.GameObject[]@)">
            <summary>
            Remove all children from this ScrollSnap
            </summary>
            <param name="WorldPositionStays">If true, the parent-relative position, scale and rotation are modified such that the object keeps the same world space position, rotation and scale as before</param>
            <param name="ChildrenRemoved">Array of child GO's removed</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.HorizontalScrollSnap.UpdateLayout">
            <summary>
            used for changing / updating between screen resolutions
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.HorizontalScrollSnap.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Release screen to swipe
            </summary>
            <param name="eventData"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnap.SetLerp(System.Boolean)">
            <summary>
            Added to provide a uniform interface for the ScrollBarHelper
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.GoToScreen(System.Int32)">
            <summary>
            Function for switching to a specific screen
            *Note, this is based on a 0 starting index - 0 to x
            </summary>
            <param name="screenIndex">0 starting index of page to jump to</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.GetPageforPosition(UnityEngine.Vector3)">
            <summary>
            Gets the closest page for the current Scroll Rect container position
            </summary>
            <param name="pos">Position to test, normally the Scroll Rect container Local position</param>
            <returns>Closest Page number (zero indexed array value)</returns>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.IsRectSettledOnaPage(UnityEngine.Vector3)">
            <summary>
            Validates if the current Scroll Rect container position is within the bounds for a page
            </summary>
            <param name="pos">Position to test, normally the Scroll Rect container Local position</param>
            <returns>True / False, is the position in the bounds of a page</returns>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.GetPositionforPage(System.Int32,UnityEngine.Vector3@)">
            <summary>
            Returns the local position for a child page based on the required page number
            </summary>
            <param name="page">Page that the position is required for (Zero indexed array value)</param>
            <param name="target">Outputs the local position for the selected page</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.ScrollToClosestElement">
            <summary>
            Updates the _Lerp target to the closest page and updates the pagination bullets.  Each control's update loop will then handle the move.
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.OnCurrentScreenChange(System.Int32)">
            <summary>
            notifies pagination indicator and navigation buttons of a screen change
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.ChangeBulletsInfo(System.Int32)">
            <summary>
            changes the bullets on the bottom of the page - pagination
            </summary>
            <param name="targetScreen"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.ToggleNavigationButtons(System.Int32)">
            <summary>
            disables the page navigation buttons when at the first or last screen
            </summary>
            <param name="targetScreen"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.StartScreenChange">
            <summary>
            Event fires when the user starts to change the page, either via swipe or button.
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.ScreenChange">
            <summary>
            Event fires when the currently viewed page changes, also updates while the scroll is moving
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.EndScreenChange">
            <summary>
            Event fires when control settles on a page, outputs the new page number
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.CurrentPageObject">
            <summary>
            Returns the Transform of the Currentpage
            </summary>
            <returns>Currently selected Page Transform</returns>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.CurrentPageObject(UnityEngine.Transform@)">
            <summary>
            Returns the Transform of the Currentpage in an out param for performance
            </summary>
            <param name="returnObject">Currently selected Page Transform</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Touch screen to start swiping
            </summary>
            <param name="eventData"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.OnDrag(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            While dragging do
            </summary>
            <param name="eventData"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.UnityEngine#UI#Extensions#IScrollSnap#CurrentPage">
            <summary>
            Added to provide a uniform interface for the ScrollBarHelper
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.SetLerp(System.Boolean)">
            <summary>
            Added to provide a uniform interface for the ScrollBarHelper
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollSnapBase.ChangePage(System.Int32)">
            <summary>
            Added to provide a uniform interface for the ScrollBarHelper
            </summary>
        </member>
        <member name="T:UnityEngine.UI.Extensions.TableLayoutGroup">
            <summary>
            Arranges child objects into a non-uniform grid, with fixed column widths and flexible row heights
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.TableLayoutGroup.StartCorner">
            <summary>
            The corner starting from which the cells should be arranged
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.TableLayoutGroup.ColumnWidths">
            <summary>
            The widths of all the columns in the table
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.TableLayoutGroup.MinimumRowHeight">
            <summary>
            The minimum height for any row in the table
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.TableLayoutGroup.FlexibleRowHeight">
            <summary>
            Expand rows to fit the cell with the highest preferred height?
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.TableLayoutGroup.ColumnSpacing">
            <summary>
            The horizontal spacing between each cell in the table
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.TableLayoutGroup.RowSpacing">
            <summary>
            The vertical spacing between each row in the table
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.VerticalScrollSnap.AddChild(UnityEngine.GameObject)">
            <summary>
            Add a new child to this Scroll Snap and recalculate it's children
            </summary>
            <param name="GO">GameObject to add to the ScrollSnap</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.VerticalScrollSnap.AddChild(UnityEngine.GameObject,System.Boolean)">
            <summary>
            Add a new child to this Scroll Snap and recalculate it's children
            </summary>
            <param name="GO">GameObject to add to the ScrollSnap</param>
            <param name="WorldPositionStays">Should the world position be updated to it's parent transform?</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.VerticalScrollSnap.RemoveChild(System.Int32,UnityEngine.GameObject@)">
            <summary>
            Remove a new child to this Scroll Snap and recalculate it's children 
            *Note, this is an index address (0-x)
            </summary>
            <param name="index">Index element of child to remove</param>
            <param name="ChildRemoved">>Resulting removed GO</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.VerticalScrollSnap.RemoveChild(System.Int32,System.Boolean,UnityEngine.GameObject@)">
            <summary>
            Remove a new child to this Scroll Snap and recalculate it's children 
            *Note, this is an index address (0-x)
            </summary>
            <param name="index">Index element of child to remove</param>
            <param name="WorldPositionStays">If true, the parent-relative position, scale and rotation are modified such that the object keeps the same world space position, rotation and scale as before</param>
            <param name="ChildRemoved">Resulting removed GO</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.VerticalScrollSnap.RemoveAllChildren(UnityEngine.GameObject[]@)">
            <summary>
            Remove all children from this ScrollSnap
            </summary>
            <param name="ChildrenRemoved">Array of child GO's removed</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.VerticalScrollSnap.RemoveAllChildren(System.Boolean,UnityEngine.GameObject[]@)">
            <summary>
            Remove all children from this ScrollSnap
            </summary>
            <param name="WorldPositionStays">If true, the parent-relative position, scale and rotation are modified such that the object keeps the same world space position, rotation and scale as before</param>
            <param name="ChildrenRemoved">Array of child GO's removed</param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.VerticalScrollSnap.UpdateLayout">
            <summary>
            used for changing / updating between screen resolutions
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.VerticalScrollSnap.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Release screen to swipe
            </summary>
            <param name="eventData"></param>
        </member>
        <member name="T:UnityEngine.UI.Extensions.SimpleMenu`1">
            <summary>
            A base menu class that implements parameterless Show and Hide methods
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.UICornerCut.AddVert(System.Single,System.Single,UnityEngine.Rect,UnityEngine.Color32,UnityEngine.UI.VertexHelper)">
            <summary>
            Auto UV handler within the assigned area
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="area"></param>
            <param name="color32"></param>
            <param name="vh"></param>
        </member>
        <member name="P:UnityEngine.UI.Extensions.UIGridRenderer.GridColumns">
            <summary>
            Number of columns in the Grid
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.UIGridRenderer.GridRows">
            <summary>
            Number of rows in the grid.
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.UILineRenderer.Points">
            <summary>
            Points to be drawn in the line.
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.UILineTextureRenderer.uvRect">
            <summary>
            UV rectangle used by the texture.
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.UILineTextureRenderer.Points">
            <summary>
            Points to be drawn in the line.
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.UIPrimitiveBase.defaultETC1GraphicMaterial">
            <summary>
            Default material used to draw everything if no explicit material was specified.
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.UIPrimitiveBase.mainTexture">
            <summary>
            Image's texture comes from the UnityEngine.Image.
            </summary>
        </member>
        <member name="P:UnityEngine.UI.Extensions.UIPrimitiveBase.hasBorder">
            <summary>
            Whether the Image has a border to work with.
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.UIPrimitiveBase.MapCoordinate(UnityEngine.Vector2,UnityEngine.Rect)">
            <summary>
            Return image adjusted position
            **Copied from Unity's Image component for now and simplified for UI Extensions primatives
            </summary>
            <param name="local"></param>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="T:UnityEngine.UI.Extensions.UIWindowBase">
            <summary>
            Includes a few fixes of my own, mainly to tidy up duplicates, remove unneeded stuff and testing. (nothing major, all the crew above did the hard work!)
            </summary>
        </member>
        <member name="T:UnityEngine.UI.Extensions.BezierPath">
                    Class for representing a Bezier path, and methods for getting suitable points to 
                    draw the curve with line segments.
        </member>
        <member name="M:UnityEngine.UI.Extensions.BezierPath.#ctor">
                        Constructs a new empty Bezier curve. Use one of these methods
                        to add points: SetControlPoints, Interpolate, SamplePoints.
        </member>
        <member name="M:UnityEngine.UI.Extensions.BezierPath.SetControlPoints(System.Collections.Generic.List{UnityEngine.Vector2})">
                        Sets the control points of this Bezier path.
                        Points 0-3 forms the first Bezier curve, points 
                        3-6 forms the second curve, etc.
        </member>
        <member name="M:UnityEngine.UI.Extensions.BezierPath.GetControlPoints">
                        Returns the control points for this Bezier curve.
        </member>
        <member name="M:UnityEngine.UI.Extensions.BezierPath.Interpolate(System.Collections.Generic.List{UnityEngine.Vector2},System.Single)">
                        Calculates a Bezier interpolated path for the given points.
        </member>
        <member name="M:UnityEngine.UI.Extensions.BezierPath.SamplePoints(System.Collections.Generic.List{UnityEngine.Vector2},System.Single,System.Single,System.Single)">
                        Sample the given points as a Bezier path.
        </member>
        <member name="M:UnityEngine.UI.Extensions.BezierPath.CalculateBezierPoint(System.Int32,System.Single)">
                        Caluclates a point on the path.
                        
                        @param curveIndex The index of the curve that the point is on. For example, 
                        the second curve (index 1) is the curve with controlpoints 3, 4, 5, and 6.
                        
                        @param t The paramater indicating where on the curve the point is. 0 corresponds 
                        to the "left" point, 1 corresponds to the "right" end point.
        </member>
        <member name="M:UnityEngine.UI.Extensions.BezierPath.GetDrawingPoints0">
                        Gets the drawing points. This implementation simply calculates a certain number
                        of points per curve.
        </member>
        <member name="M:UnityEngine.UI.Extensions.BezierPath.GetDrawingPoints1">
                        Gets the drawing points. This implementation simply calculates a certain number
                        of points per curve.
            
                        This is a lsightly different inplementation from the one above.
        </member>
        <member name="M:UnityEngine.UI.Extensions.BezierPath.GetDrawingPoints2">
                        This gets the drawing points of a bezier curve, using recursive division,
                        which results in less points for the same accuracy as the above implementation.
        </member>
        <member name="M:UnityEngine.UI.Extensions.BezierPath.FindDrawingPoints(System.Int32,System.Single,System.Single,System.Collections.Generic.List{UnityEngine.Vector2},System.Int32)">
                        @returns the number of points added.
        </member>
        <member name="M:UnityEngine.UI.Extensions.BezierPath.CalculateBezierPoint(System.Single,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
                        Caluclates a point on the Bezier curve represented with the four controlpoints given.
        </member>
        <!-- Badly formed XML comment ignored for member "T:UnityEngine.UI.Extensions.CLZF2" -->
        <member name="F:UnityEngine.UI.Extensions.CLZF2.HashTable">
            <summary>
            Hashtable, that can be allocated only once
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.CLZF2.lzf_compress(System.Byte[],System.Byte[]@)">
            <summary>
            Compresses the data using LibLZF algorithm
            </summary>
            <param name="input">Reference to the data to compress</param>
            <param name="output">Reference to a buffer which will contain the compressed data</param>
            <returns>The size of the compressed archive in the output buffer</returns>
        </member>
        <member name="M:UnityEngine.UI.Extensions.CLZF2.lzf_decompress(System.Byte[],System.Byte[]@)">
            <summary>
            Decompresses the data using LibLZF algorithm
            </summary>
            <param name="input">Reference to the data to decompress</param>
            <param name="output">Reference to a buffer which will contain the decompressed data</param>
            <returns>Returns decompressed size</returns>
        </member>
        <member name="T:UnityEngine.UI.Extensions.InputFieldEnterSubmit">
            <summary>
            Usage: Add this component to the input and add the function to execute to the EnterSubmit event of this script
            </summary>
        </member>
        <member name="T:UnityEngine.UI.Extensions.NonDrawingGraphic">
            A concrete subclass of the Unity UI `Graphic` class that just skips drawing.
            Useful for providing a raycast target without actually drawing anything.
        </member>
        <member name="M:UnityEngine.UI.Extensions.NonDrawingGraphic.OnPopulateMesh(UnityEngine.UI.VertexHelper)">
            Probably not necessary since the chain of calls `Rebuild()`->`UpdateGeometry()`->`DoMeshGeneration()`->`OnPopulateMesh()` won't happen; so here really just as a fail-safe.
        </member>
        <member name="M:UnityEngine.UI.Extensions.PaginationManager.GoToScreen(System.Int32)">
            <summary>
            Calling from other scripts if you need to change screens progamatically
            </summary>
            <param name="pageNo"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.PaginationManager.ToggleClick(UnityEngine.UI.Toggle)">
            <summary>
            Calls GoToScreen() based on the index of toggle that was pressed
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.PaginationManager.ToggleClick(System.Int32)">
            <summary>
            Calls GoToScreen() based on the index of toggle that was pressed
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollRectEx.DoForParents``1(System.Action{``0})">
            <summary>
            Do action for all parents
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollRectEx.OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Always route initialize potential drag event to parents
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollRectEx.OnDrag(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Drag event
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollRectEx.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Begin drag event
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.ScrollRectEx.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            End drag event
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.RectTransformExtension.switchToRectTransform(UnityEngine.RectTransform,UnityEngine.RectTransform)">
            <summary>
            Converts the anchoredPosition of the first RectTransform to the second RectTransform,
            taking into consideration offset, anchors and pivot, and returns the new anchoredPosition
            </summary>
        </member>
        <member name="T:UnityEngine.UI.Extensions.UI_InfiniteScroll">
            <summary>
            Infinite scroll view with automatic configuration 
            
            Fields
            - InitByUSer - in case your scrollrect is populated from code, you can explicitly Initialize the infinite scroll after your scroll is ready
            by callin Init() method
            
            Notes
            - doesn't work in both vertical and horizontal orientation at the same time.
            - in order to work it disables layout components and size fitter if present(automatically)
            
            </summary>
        </member>
        <member name="T:UnityEngine.UI.Extensions.UI_ScrollRectOcclusion">
            <summary>
            ScrollRectOcclusion - disables the objects outside of the scrollrect viewport. 
            Useful for scrolls with lots of content, reduces geometry and drawcalls (if content is not batched)
            
            Fields
            - InitByUSer - in case your scrollrect is populated from code, you can explicitly Initialize the infinite scroll after your scroll is ready
            by calling Init() method
            
            Notes
            - In some cases it might create a bit of spikes, especially if you have lots of UI.Text objects in the child's. In that case consider to Add 
            CanvasGroup to your child's and instead of calling setActive on game object change CanvasGroup.alpha value. At 0 it is not being rendered hence will 
            also optimize the performance. 
            - works for both vertical and horizontal scrolls, even at the same time (grid layout)
            - in order to work it disables layout components and size fitter if present (automatically)
            </summary>
        </member>
        <member name="T:UnityEngine.UI.Extensions.UI_TweenScale">
            <summary>
            Dynamic scalling of text or image (including button) based on curves
            
            Fields
            - animCurve - animation curve for scale (if isUniform set to false, will apply only to X scale)
            - speed - animation speed
            - isLoop - animation will play infinitely (in order to make it work set your animation curve to loop)
            - playAtAwake - starts automatically with script becoming active. Otherwise you need to call Play() method.
            - isUniform - if false animCurve will modify object X scale and animCurveY - Y scale.
            
            
            Notes
            - If you want to stop the animation call the ResetTween() method. 
            - In some cases it can create spikes due to redrawing on change, it is recommended  to use it on simple objects in separated canvases to 
            avoid redrawing full canvas. 
            - If you want to scale object only in 1 axis select non unifor and use linear curve from 1 to 1 to lock the scale. 
            
            </summary>
        </member>
        <member name="T:UnityEngine.UI.Extensions.UISelectableExtension">
            <summary>
            UIButton
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.UISelectableExtension.TestClicked">
            <summary>
            Test method to verify a control has been clicked
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.UISelectableExtension.TestPressed">
            <summary>
            Test method to verify a controll is pressed
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.UISelectableExtension.TestReleased">
            <summary>
            est method to verify if a control is released
            </summary>
        </member>
        <member name="M:UnityEngine.UI.Extensions.UISelectableExtension.TestHold">
            <summary>
            est method to verify if a control is being held
            </summary>
        </member>
        <member name="T:UnityEngine.UI.ExtensionsToggle">
            <summary>
            Simple toggle -- something that has an 'on' and 'off' states: checkbox, toggle button, radio button, etc.
            </summary>
        </member>
        <member name="F:UnityEngine.UI.ExtensionsToggle.UniqueID">
            <summary>
            Variable to identify this script, change the datatype if needed to fit your use case 
            </summary>
        </member>
        <member name="F:UnityEngine.UI.ExtensionsToggle.toggleTransition">
            <summary>
            Transition type.
            </summary>
        </member>
        <member name="F:UnityEngine.UI.ExtensionsToggle.graphic">
            <summary>
            Graphic the toggle should be working with.
            </summary>
        </member>
        <member name="F:UnityEngine.UI.ExtensionsToggle.onValueChanged">
            <summary>
            Allow for delegate-based subscriptions for faster events than 'eventReceiver', and allowing for multiple receivers.
            </summary>
        </member>
        <member name="F:UnityEngine.UI.ExtensionsToggle.onToggleChanged">
            <summary>
            Allow for delegate-based subscriptions for faster events than 'eventReceiver', and allowing for multiple receivers.
            </summary>
        </member>
        <member name="P:UnityEngine.UI.ExtensionsToggle.IsOn">
            <summary>
            Whether the toggle is currently active.
            </summary>
        </member>
        <member name="M:UnityEngine.UI.ExtensionsToggle.PlayEffect(System.Boolean)">
            <summary>
            Play the appropriate effect.
            </summary>
        </member>
        <member name="M:UnityEngine.UI.ExtensionsToggle.Start">
            <summary>
            Assume the correct visual state.
            </summary>
        </member>
        <member name="M:UnityEngine.UI.ExtensionsToggle.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            React to clicks.
            </summary>
        </member>
        <member name="F:UnityEngine.EventSystems.Extensions.AimerInputModule.activateAxis">
            <summary>
            The Input axis name used to activate the object under the reticle.
            </summary>
        </member>
        <member name="F:UnityEngine.EventSystems.Extensions.AimerInputModule.aimerOffset">
            <summary>
            The aimer offset position. Aimer is center screen use this offset to change that.
            </summary>
        </member>
        <member name="F:UnityEngine.EventSystems.Extensions.AimerInputModule.objectUnderAimer">
            <summary>
            The object under aimer. A static access field that lets you know what is under the aimer.
            This field can return null.
            </summary>
        </member>
        <member name="F:UnityEngine.EventSystems.GamePadInputModule.m_VerticalAxis">
            <summary>
            Name of the vertical axis for movement (if axis events are used).
            </summary>
        </member>
        <member name="F:UnityEngine.EventSystems.GamePadInputModule.m_SubmitButton">
            <summary>
            Name of the submit button.
            </summary>
        </member>
        <member name="F:UnityEngine.EventSystems.GamePadInputModule.m_CancelButton">
            <summary>
            Name of the submit button.
            </summary>
        </member>
        <member name="P:UnityEngine.EventSystems.GamePadInputModule.horizontalAxis">
            <summary>
            Name of the horizontal axis for movement (if axis events are used).
            </summary>
        </member>
        <member name="P:UnityEngine.EventSystems.GamePadInputModule.verticalAxis">
            <summary>
            Name of the vertical axis for movement (if axis events are used).
            </summary>
        </member>
        <member name="M:UnityEngine.EventSystems.GamePadInputModule.SendSubmitEventToSelectedObject">
            <summary>
            Process submit keys.
            </summary>
        </member>
        <member name="M:UnityEngine.EventSystems.GamePadInputModule.SendMoveEventToSelectedObject">
            <summary>
            Process events.
            </summary>
        </member>
        <member name="M:EmptySprite.Get">
            <summary>
             Returns the instance of a (1 x 1) white Spprite
             </summary>	
        </member>
    </members>
</doc>
